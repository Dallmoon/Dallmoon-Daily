%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:34 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
15.727 18.184 m 15.703 18.184 15.68 18.184 15.656 18.184 c 14.93 18.152
 14.277 17.992 13.656 17.688 c 13.199 17.469 12.691 17.211 12.043 16.824
 c 9.68 15.422 7.934 13.121 7.105 11.875 c 7.086 11.848 7.074 11.828 7.066
 11.816 c 6.68 11.273 5.781 9.863 5.738 8.504 c 5.688 6.949 6.508 6.23 6.816
 5.961 c 6.832 5.945 6.848 5.934 6.859 5.922 c 7.223 5.594 7.715 5.457 8.207
 5.547 c 8.367 5.578 8.574 5.617 8.762 5.66 c 8.766 5.66 8.773 5.664 8.781
 5.664 c 9.152 5.73 9.578 5.902 9.902 6.656 c 9.984 6.844 10.102 7.121 10.227
 7.414 c 10.426 7.891 10.73 8.609 10.781 8.711 c 11.035 9.219 10.938 9.617
 10.809 9.859 c 10.773 9.918 l 10.703 10.055 10.617 10.223 10.434 10.41 
c 10.352 10.508 10.039 10.934 9.809 11.246 c 9.477 11.699 9.273 11.973 9.145
 12.145 c 9.875 13.09 10.895 14.215 12.125 15.09 c 13.57 13.723 13.918 13.371
 13.988 13.285 c 14.305 12.871 14.699 12.836 14.91 12.852 c 15.156 12.871
 15.355 12.969 15.535 13.063 c 15.859 13.234 17.457 14.281 17.473 14.289
 c 17.523 14.324 17.57 14.355 17.617 14.383 c 17.867 14.547 18.086 14.688
 18.234 14.938 c 18.492 15.379 18.387 16.203 18.176 16.785 c 17.832 17.738
 16.457 18.184 15.727 18.184 c h
13.453 15.902 m 13.77 16.074 14.051 16.215 14.313 16.34 c 14.887 16.621
 15.391 16.672 15.719 16.684 c 16.027 16.699 16.66 16.445 16.77 16.266 c
 16.852 16.031 16.879 15.828 16.887 15.699 c 16.859 15.68 16.832 15.664 
16.805 15.645 c 16.758 15.613 16.703 15.582 16.648 15.543 c 16.246 15.277
 15.301 14.668 14.949 14.453 c 14.73 14.68 14.309 15.09 13.453 15.902 c 
h
16.77 16.266 m h
13.984 13.289 m 13.984 13.293 13.984 13.293 13.984 13.293 c 13.984 13.293
 13.984 13.293 13.984 13.289 c h
7.914 7.023 m 7.898 7.023 7.879 7.023 7.863 7.039 c 7.848 7.055 7.828 7.07
 7.805 7.09 c 7.566 7.297 7.211 7.609 7.238 8.457 c 7.266 9.363 7.941 10.441
 8.23 10.863 c 8.355 10.695 8.488 10.512 8.602 10.359 c 9.168 9.586 9.277
 9.441 9.367 9.355 c 9.379 9.344 9.387 9.336 9.402 9.305 c 9.324 9.133 9.148
 8.723 8.844 8.004 c 8.723 7.711 8.605 7.434 8.523 7.25 c 8.5 7.195 8.48
 7.16 8.469 7.133 c 8.453 7.129 8.438 7.125 8.422 7.125 c 8.266 7.086 8.078
 7.051 7.938 7.023 c 7.934 7.023 7.926 7.023 7.914 7.023 c h
10.422 10.418 m 10.422 10.422 10.418 10.426 10.414 10.426 c 10.418 10.426
 10.418 10.422 10.422 10.418 c h
10.422 10.418 m f
-0.016 24.012 m 0.328 22.754 l 0.336 22.715 1.27 19.309 1.68 17.836 c 0.578
 16.02 0 13.941 0 11.809 c 0 5.297 5.383 0 12 0 c 18.617 0 24 5.297 24 11.809
 c 24 18.32 18.617 23.617 12 23.617 c 10.098 23.617 8.211 23.172 6.531 22.324
 c 5.492 22.555 2.438 23.355 1.242 23.676 c h
6.762 20.75 m 6.992 20.871 l 8.52 21.688 10.25 22.117 12 22.117 c 17.789
 22.117 22.5 17.492 22.5 11.809 c 22.5 6.125 17.789 1.5 12 1.5 c 6.211 1.5
 1.5 6.125 1.5 11.809 c 1.5 13.766 2.059 15.668 3.121 17.316 c 3.305 17.598
 l 3.211 17.926 l 2.996 18.695 2.469 20.609 2.117 21.891 c 3.598 21.504 
5.914 20.902 6.504 20.797 c h
6.762 20.75 m f
Q Q
showpage
%%Trailer
%%EOF
