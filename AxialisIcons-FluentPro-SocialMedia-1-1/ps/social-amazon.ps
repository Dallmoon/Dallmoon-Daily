%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:28:46 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 23 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 23 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 22 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
11.02 16.656 m 9.242 16.656 8.008 16.375 7.133 15.766 c 6.082 15.035 5.57
 13.879 5.57 12.227 c 5.57 10.91 6.504 9.473 8.074 8.379 c 9.313 7.512 11.488
 6.48 14.832 6.48 c 17.254 6.48 l 17.254 9.621 l 17.254 10.996 17.109 12.5
 16.051 14.195 c 15.008 15.875 12.434 16.656 11.02 16.656 c h
14.832 7.98 m 11.879 7.98 9.992 8.867 8.934 9.609 c 7.559 10.566 7.07 11.617
 7.07 12.227 c 7.07 14.391 8.105 15.156 11.02 15.156 c 11.949 15.156 14.063
 14.555 14.777 13.398 c 15.59 12.102 15.754 10.949 15.754 9.621 c 15.754
 7.98 l h
14.832 7.98 m f
17.504 16.941 m 16.875 16.43 l 16.18 15.863 15.754 15.371 15.754 13.328
 c 15.754 4.445 l 15.754 1.813 12.789 1.527 11.512 1.527 c 9.664 1.527 7.566
 2.75 7.02 4.141 c 6.742 4.84 l 5.348 4.293 l 5.621 3.594 l 6.395 1.625 
9.035 0.027 11.512 0.027 c 12.504 0.027 13.938 0.168 15.152 0.84 c 16.527
 1.602 17.254 2.848 17.254 4.445 c 17.254 13.328 l 17.254 14.805 17.445 
14.957 17.82 15.262 c 18.453 15.777 l h
17.504 16.941 m f
11.844 23.973 m 8.699 23.973 5.492 22.512 2.305 19.633 c 1.746 19.133 l
 2.75 18.02 l 3.309 18.52 l 6.211 21.141 9.086 22.473 11.844 22.473 c 14.484
 22.473 17.555 21.246 20.727 18.93 c 21.332 18.488 l 22.215 19.699 l 21.609
 20.145 l 18.129 22.684 14.844 23.973 11.844 23.973 c h
11.844 23.973 m f
20.633 23.352 m 19.48 22.395 l 19.957 21.816 l 20.48 21.184 20.703 20.145
 20.727 19.656 c 20.359 19.52 19.527 19.371 18.66 19.586 c 17.93 19.77 l
 17.57 18.313 l 18.297 18.133 l 19.789 17.762 21.582 18.09 22.063 18.82 
c 22.09 18.867 l 22.469 19.551 22.047 21.648 21.113 22.773 c h
20.891 19.734 m h
20.727 19.457 m h
20.727 19.457 m f
Q Q
showpage
%%Trailer
%%EOF
