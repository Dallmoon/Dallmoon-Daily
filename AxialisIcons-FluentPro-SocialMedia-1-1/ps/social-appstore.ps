%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:28:47 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 1 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 1 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 1 24 23 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
2 22.355 m 1.738 22.355 1.496 22.203 1.387 21.965 c 1.246 21.66 1.313 21.48
 1.699 20.492 c 1.898 19.984 2.184 19.281 2.496 18.516 c 3.246 16.699 3.57
 15.969 3.723 15.66 c 3.738 15.602 3.762 15.543 3.793 15.492 c 3.844 15.406
 8.852 7.047 10.066 4.863 c 10.27 4.504 10.605 4.246 10.992 4.152 c 11.055
 4.141 11.117 4.129 11.184 4.125 c 10.91 3.582 10.727 3.211 10.707 3.164
 c 10.488 2.578 10.645 1.957 11.109 1.547 c 11.301 1.383 11.941 0.957 12.184
 0.852 c 12.555 0.684 13.047 0.711 13.402 0.914 c 13.793 1.137 13.984 1.355
 14.496 2.352 c 14.75 2.848 16.176 5.688 17.547 8.426 c 18.297 9.926 18.934
 11.207 19.395 12.129 c 20.285 13.926 20.285 13.926 20.285 14.109 c 20.285
 14.496 20.016 14.672 19.707 14.879 c 19.508 15.008 19.25 15.172 19.07 15.281
 c 18.715 15.5 18.125 15.859 17.977 15.934 c 17.617 16.113 17.332 15.938
 17.254 15.879 c 17.102 15.762 17.102 15.762 16.047 13.707 c 15.348 12.348
 14.488 10.66 13.891 9.484 c 13.723 9.148 13.328 8.375 12.875 7.48 c 11.277
 10.359 7.102 17.527 6.91 17.855 c 6.859 17.945 6.785 18.023 6.695 18.082
 c 6.672 18.105 6.641 18.133 6.613 18.164 c 6.492 18.281 6.324 18.445 6.121
 18.645 c 5.715 19.039 5.176 19.559 4.637 20.082 c 4.098 20.605 3.555 21.125
 3.148 21.516 c 2.945 21.711 2.773 21.875 2.656 21.992 c 2.387 22.246 2.273
 22.355 2 22.355 c h
4.621 16.941 m 4.379 17.504 4.047 18.301 3.723 19.09 c 4.32 18.512 4.914
 17.934 5.32 17.539 c h
5.262 15.664 m 5.41 15.789 5.594 15.945 5.828 16.148 c 5.949 16.25 6.063
 16.352 6.172 16.445 c 7.414 14.305 11.023 8.086 12.023 6.223 c 12.078 6.121
 12.047 5.984 11.984 5.938 c 11.313 5.477 l 11.301 5.469 11.297 5.469 11.297
 5.469 c 11.293 5.469 11.27 5.48 11.246 5.523 c 10.184 7.43 6.387 13.785
 5.262 15.664 c h
11.969 2.676 m 12.297 3.375 16.707 12.051 17.926 14.398 c 18.195 14.238
 18.508 14.043 18.758 13.883 c 17.738 11.813 13.75 3.852 13.297 2.969 c 
12.914 2.223 12.824 2.141 12.746 2.094 c 12.738 2.094 12.723 2.09 12.715
 2.094 c 12.566 2.168 12.102 2.477 12 2.563 c 11.961 2.598 11.949 2.621 
11.969 2.676 c h
18.984 14.359 m h
21.582 22.305 m 21.574 22.305 21.566 22.305 21.559 22.305 c 21.277 22.301
 20.906 22.152 20.754 21.488 c 20.656 21.059 20.516 20.809 19.918 20.371
 c 19.164 19.82 18.801 19.391 18.48 18.68 c 18 17.609 18.242 16.973 18.531
 16.625 c 18.723 16.387 19.531 15.875 19.871 15.664 c 20.719 15.141 21.238
 15.563 21.637 16.047 c 22.309 16.863 22.711 17.867 22.801 18.949 c 22.895
 20.063 22.668 21.266 22.246 21.883 c 22.16 22.012 21.961 22.305 21.582 
22.305 c h
22.09 21.258 m h
19.566 17.496 m 19.551 17.551 19.543 17.746 19.711 18.125 c 19.934 18.613
 20.156 18.871 20.715 19.281 c 21.016 19.504 21.258 19.715 21.449 19.934
 c 21.477 19.66 21.48 19.359 21.457 19.063 c 21.387 18.242 21.098 17.516
 20.598 16.902 c 20.574 16.879 20.559 16.855 20.539 16.84 c 20.035 17.152
 19.68 17.402 19.566 17.496 c h
19.566 17.496 m f
2 22.355 m 1.738 22.355 1.496 22.203 1.387 21.965 c 1.246 21.66 1.313 21.48
 1.699 20.492 c 1.898 19.984 2.184 19.281 2.496 18.516 c 3.246 16.699 3.57
 15.969 3.723 15.66 c 3.738 15.602 3.762 15.543 3.793 15.492 c 3.844 15.406
 8.852 7.047 10.066 4.863 c 10.27 4.504 10.605 4.246 10.992 4.152 c 11.055
 4.141 11.117 4.129 11.184 4.125 c 10.91 3.582 10.727 3.211 10.707 3.164
 c 10.488 2.578 10.645 1.957 11.109 1.547 c 11.301 1.383 11.941 0.957 12.184
 0.852 c 12.555 0.684 13.047 0.711 13.402 0.914 c 13.793 1.137 13.984 1.355
 14.496 2.352 c 14.75 2.848 16.176 5.688 17.547 8.426 c 18.297 9.926 18.934
 11.207 19.395 12.129 c 20.285 13.926 20.285 13.926 20.285 14.109 c 20.285
 14.496 20.016 14.672 19.707 14.879 c 19.508 15.008 19.25 15.172 19.07 15.281
 c 18.715 15.5 18.125 15.859 17.977 15.934 c 17.617 16.113 17.332 15.938
 17.254 15.879 c 17.102 15.762 17.102 15.762 16.047 13.707 c 15.348 12.348
 14.488 10.66 13.891 9.484 c 13.723 9.148 13.328 8.375 12.875 7.48 c 11.277
 10.359 7.102 17.527 6.91 17.855 c 6.859 17.945 6.785 18.023 6.695 18.082
 c 6.672 18.105 6.641 18.133 6.613 18.164 c 6.492 18.281 6.324 18.445 6.121
 18.645 c 5.715 19.039 5.176 19.559 4.637 20.082 c 4.098 20.605 3.555 21.125
 3.148 21.516 c 2.945 21.711 2.773 21.875 2.656 21.992 c 2.387 22.246 2.273
 22.355 2 22.355 c h
4.621 16.941 m 4.379 17.504 4.047 18.301 3.723 19.09 c 4.32 18.512 4.914
 17.934 5.32 17.539 c h
5.262 15.664 m 5.41 15.789 5.594 15.945 5.828 16.148 c 5.949 16.25 6.063
 16.352 6.172 16.445 c 7.414 14.305 11.023 8.086 12.023 6.223 c 12.078 6.121
 12.047 5.984 11.984 5.938 c 11.313 5.477 l 11.301 5.469 11.297 5.469 11.297
 5.469 c 11.293 5.469 11.27 5.48 11.246 5.523 c 10.184 7.43 6.387 13.785
 5.262 15.664 c h
11.969 2.676 m 12.297 3.375 16.707 12.051 17.926 14.398 c 18.195 14.238
 18.508 14.043 18.758 13.883 c 17.738 11.813 13.75 3.852 13.297 2.969 c 
12.914 2.223 12.824 2.141 12.746 2.094 c 12.738 2.094 12.723 2.09 12.715
 2.094 c 12.566 2.168 12.102 2.477 12 2.563 c 11.961 2.598 11.949 2.621 
11.969 2.676 c h
18.984 14.359 m h
21.582 22.305 m 21.574 22.305 21.566 22.305 21.559 22.305 c 21.277 22.301
 20.906 22.152 20.754 21.488 c 20.656 21.059 20.516 20.809 19.918 20.371
 c 19.164 19.82 18.801 19.391 18.48 18.68 c 18 17.609 18.242 16.973 18.531
 16.625 c 18.723 16.387 19.531 15.875 19.871 15.664 c 20.719 15.141 21.238
 15.563 21.637 16.047 c 22.309 16.863 22.711 17.867 22.801 18.949 c 22.895
 20.063 22.668 21.266 22.246 21.883 c 22.16 22.012 21.961 22.305 21.582 
22.305 c h
22.09 21.258 m h
19.566 17.496 m 19.551 17.551 19.543 17.746 19.711 18.125 c 19.934 18.613
 20.156 18.871 20.715 19.281 c 21.016 19.504 21.258 19.715 21.449 19.934
 c 21.477 19.66 21.48 19.359 21.457 19.063 c 21.387 18.242 21.098 17.516
 20.598 16.902 c 20.574 16.879 20.559 16.855 20.539 16.84 c 20.035 17.152
 19.68 17.402 19.566 17.496 c h
19.566 17.496 m f
9.871 15 m 15.445 15 l 15.328 14.773 15.195 14.516 15.047 14.219 c 14.926
 13.988 14.805 13.746 14.676 13.5 c 10.738 13.5 l 10.441 14.016 10.148 14.52
 9.871 15 c h
9.871 15 m f
12.824 9.863 m 12.707 10.07 12.586 10.281 12.461 10.5 c 13.148 10.5 l 13.059
 10.324 12.969 10.152 12.891 9.992 c 12.871 9.953 12.848 9.91 12.824 9.863
 c h
12.824 9.863 m f
19.09 9 m 19.363 9.543 19.613 10.047 19.84 10.5 c 22.5 10.5 l 22.5 13.5
 l 21.301 13.5 l 21.41 13.781 21.41 13.895 21.41 14.109 c 21.41 14.23 21.402
 14.344 21.383 14.449 c 21.734 14.59 22.008 14.809 22.207 15 c 24 15 l 24
 9 l h
19.09 9 m f
2.828 14.914 m 2.84 14.891 3.168 14.344 3.672 13.5 c 1.5 13.5 l 1.5 10.5
 l 5.461 10.5 l 5.754 10.008 6.055 9.5 6.352 9 c 0 9 l 0 15 l 2.781 15 l
 2.797 14.973 2.813 14.941 2.828 14.914 c h
2.828 14.914 m f
Q Q
showpage
%%Trailer
%%EOF
