%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:33 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 23
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 23
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 23 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
9.348 24 m 7.109 24 4.992 23.441 3.301 22.371 c 1.758 21.395 -0.262 19.707
 0.027 16.359 c 0.258 13.719 1.773 11.691 3.379 9.891 c 4.613 8.508 6.199
 7 8.59 6.324 c 10.004 5.926 10.82 6.48 11.18 6.844 c 11.766 7.438 12.039
 8.387 11.961 9.465 c 12.016 9.445 12.074 9.43 12.133 9.41 c 13.492 8.988
 15.543 8.355 16.707 9.871 c 17.344 10.699 17.223 11.898 17 12.793 c 17.055
 12.82 17.109 12.852 17.164 12.883 c 18.465 13.598 20.086 14.484 19.785 
17.23 c 19.695 18.047 19.27 19.02 18.91 19.582 c 17.617 21.609 15.016 23.172
 11.949 23.754 c 11.074 23.918 10.203 24 9.348 24 c h
9.523 7.688 m 9.371 7.688 9.195 7.715 8.996 7.77 c 7.391 8.223 6.043 9.156
 4.496 10.891 c 3.066 12.496 1.715 14.285 1.523 16.488 c 1.309 18.973 2.637
 20.176 4.102 21.105 c 8.527 23.906 15.484 22.168 17.645 18.777 c 17.961
 18.281 18.238 17.543 18.293 17.066 c 18.484 15.316 17.672 14.871 16.441
 14.199 c 16.207 14.07 15.961 13.934 15.719 13.785 c 15.207 13.473 l 15.402
 12.902 l 15.727 11.949 15.773 11.117 15.516 10.781 c 15.027 10.148 13.941
 10.418 12.574 10.844 c 12.027 11.012 11.516 11.172 11.074 11.203 c 9.996
 11.285 l 10.297 10.246 l 10.586 9.266 10.508 8.301 10.113 7.898 c 9.973
 7.758 9.777 7.688 9.523 7.688 c h
8.305 20.957 m 6.809 20.957 5.355 20.223 4.805 18.543 c 4.406 17.324 4.551
 16.078 5.219 15.035 c 5.93 13.918 7.199 13.129 8.531 12.973 c 10.457 12.746
 12.16 13.801 12.676 15.539 c 13.035 16.762 12.883 17.93 12.23 18.918 c 
11.672 19.762 10.785 20.41 9.734 20.738 c 9.27 20.879 8.785 20.957 8.305
 20.957 c h
9.066 14.441 m 8.949 14.441 8.828 14.449 8.707 14.465 c 7.813 14.57 6.957
 15.098 6.48 15.844 c 6.184 16.309 5.902 17.07 6.23 18.078 c 6.676 19.438
 8.125 19.668 9.285 19.305 c 10.625 18.891 11.746 17.695 11.234 15.965 c
 11.004 15.176 10.25 14.441 9.066 14.441 c h
9.066 14.441 m f
23.43 11.855 m 22 11.414 l 22.219 10.695 l 22.836 8.688 22.406 6.469 21.098
 4.91 c 19.883 3.465 18.148 2.805 16.215 3.051 c 15.473 3.145 l 15.285 1.656
 l 16.027 1.563 l 18.449 1.258 20.715 2.125 22.246 3.945 c 23.879 5.891 
24.422 8.648 23.652 11.141 c h
23.43 11.855 m f
19.984 11.152 m 18.551 10.711 l 18.77 9.992 l 19.027 9.16 18.852 8.246 
18.309 7.605 c 17.82 7.023 17.121 6.758 16.336 6.855 c 15.594 6.949 l 15.406
 5.461 l 16.148 5.367 l 17.438 5.207 18.645 5.668 19.457 6.641 c 20.324 
7.668 20.609 9.121 20.203 10.434 c h
19.984 11.152 m f
Q Q
showpage
%%Trailer
%%EOF
