%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:13 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
4.301 23.938 m 2.145 23.938 0.754 22.59 0.754 20.5 c 0.754 17.227 3.215
 16.059 4.539 15.43 c 4.66 15.371 l 4.699 15.352 5.223 15.121 6.012 14.992
 c 3.664 12.906 2.473 10.016 2.473 6.371 c 2.473 3.891 3.371 2.406 4.121
 1.598 c 5.063 0.582 6.371 0 7.711 0 c 8.766 0 10.387 0.477 11.766 1.813
 c 12.891 2.906 14.238 4.984 14.238 8.656 c 14.238 10.328 13.992 12.082 
13.547 13.777 c 14.227 12.566 14.852 11.523 15.5 10.535 c 15.516 10.516 
l 17.016 8.391 19.375 6.242 21.254 6.242 c 22.523 6.242 23.25 6.945 23.25
 8.164 c 23.25 11.391 19.387 14.93 17.43 16.516 c 17.375 18.313 16.551 20.191
 15.176 21.609 c 14.223 22.598 13.16 23.16 12.254 23.16 c 11.063 23.16 10.352
 22.371 10.352 21.051 c 10.352 20.844 10.371 20.625 10.41 20.391 c 8.637
 22.691 6.512 23.938 4.301 23.938 c h
5.277 16.738 m 5.18 16.781 l 3.875 17.402 2.254 18.176 2.254 20.5 c 2.254
 22.188 3.535 22.438 4.301 22.438 c 8.973 22.438 12.738 14.898 12.738 8.656
 c 12.738 2.816 9.016 1.5 7.711 1.5 c 5.91 1.5 3.973 3.023 3.973 6.371 c
 3.973 10.34 5.477 13.164 8.57 15.004 c 8.914 15.207 9.055 15.625 8.91 15.992
 c 8.766 16.363 8.379 16.57 7.992 16.488 c 6.609 16.199 5.375 16.695 5.277
 16.738 c h
12.527 18.848 m 12.094 19.746 11.852 20.527 11.852 21.051 c 11.852 21.66
 12.023 21.66 12.258 21.66 c 12.617 21.66 13.32 21.375 14.102 20.566 c 15.023
 19.613 15.988 17.961 15.93 16.18 c 15.918 15.801 l 16.215 15.566 l 18.891
 13.453 21.75 10.398 21.75 8.164 c 21.75 7.914 21.699 7.844 21.688 7.832
 c 21.66 7.801 21.535 7.742 21.254 7.742 c 20.164 7.742 18.188 9.336 16.746
 11.371 c 15.473 13.309 14.277 15.496 12.527 18.848 c h
12.527 18.848 m f
Q Q
showpage
%%Trailer
%%EOF
