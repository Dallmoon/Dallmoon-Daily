%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:07 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 2 0 22 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 2 0 22 24
24 24 cairo_set_page_size
%%EndPageSetup
q 2 0 20 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
9.75 24 m 8.25 24 l 8.25 23.25 l 8.25 23.148 8.25 22.961 8.25 22.715 c 
8.254 21.938 8.254 20.484 8.25 19.504 c 8.246 18.754 l 9.746 18.746 l 9.75
 19.496 l 9.754 20.484 9.754 21.938 9.75 22.719 c 9.75 22.961 9.75 23.148
 9.75 23.25 c h
9.75 24 m f
16.5 24 m 15 24 l 15 18 l 15 16.77 14.645 16.301 14.379 16.055 c 13.18 
14.953 l 14.801 14.762 l 16.527 14.555 17.73 14.105 18.59 13.34 c 19.734
 12.32 20.289 10.715 20.289 8.43 c 20.289 7.129 19.883 5.996 19.082 5.066
 c 18.789 4.727 l 18.953 4.309 l 19.035 4.094 19.395 3.027 18.973 1.523 
c 18.523 1.59 17.641 1.863 16.258 2.863 c 15.961 3.078 l 15.605 2.973 l 
14.668 2.695 13.418 2.527 12.266 2.523 c 11.121 2.527 9.871 2.695 8.934 
2.973 c 8.582 3.078 l 8.281 2.863 l 6.898 1.863 6.012 1.59 5.566 1.523 c
 5.145 3.027 5.504 4.094 5.586 4.309 c 5.746 4.727 l 5.457 5.066 l 4.656
 6 4.25 7.133 4.25 8.43 c 4.25 13.434 7.016 14.441 9.727 14.77 c 11.328 
14.965 l 10.199 16.016 l 10.023 16.418 9.859 18.008 9.789 18.699 c 9.754
 19.02 9.727 19.297 9.699 19.504 c 9.648 19.906 l 9.277 20.082 l 7.719 20.828
 5.609 20.82 4.379 18.574 c 4.371 18.559 l 4.367 18.555 3.824 17.551 2.918
 17.484 c 2.168 17.43 l 2.281 15.934 l 3.027 15.988 l 4.723 16.117 5.609
 17.691 5.695 17.859 c 6.289 18.934 7.152 19.281 8.262 18.887 c 8.273 18.777
 8.285 18.664 8.297 18.543 c 8.41 17.449 8.504 16.672 8.621 16.121 c 7.457
 15.902 6.07 15.461 4.945 14.453 c 3.488 13.148 2.75 11.121 2.75 8.43 c 
2.75 6.91 3.188 5.566 4.051 4.422 c 3.855 3.688 3.664 2.277 4.313 0.523 
c 4.438 0.188 l 4.773 0.074 l 5.016 -0.008 6.313 -0.313 8.863 1.434 c 9.883
 1.176 11.098 1.023 12.266 1.02 c 13.438 1.023 14.656 1.176 15.676 1.434
 c 18.227 -0.313 19.52 -0.008 19.762 0.074 c 20.098 0.188 l 20.223 0.52 
l 20.875 2.277 20.684 3.688 20.488 4.422 c 21.352 5.563 21.789 6.906 21.789
 8.426 c 21.789 11.129 21.047 13.156 19.586 14.457 c 18.543 15.387 17.273
 15.828 16.164 16.059 c 16.391 16.602 16.5 17.242 16.5 18 c h
16.5 24 m f
Q Q
showpage
%%Trailer
%%EOF
