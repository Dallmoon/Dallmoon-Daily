%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:23 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
17.039 24 m 15.98 24 14.926 23.762 13.977 23.305 c 13.367 23.402 12.746
 23.449 12.129 23.449 c 5.793 23.449 0.637 18.375 0.637 12.141 c 0.637 11.469
 0.699 10.801 0.816 10.145 c 0.281 9.156 0 8.047 0 6.918 c 0 3.129 3.129
 0.047 6.977 0.047 c 8.195 0.047 9.387 0.359 10.441 0.953 c 11 0.871 11.566
 0.832 12.129 0.832 c 18.461 0.832 23.617 5.906 23.617 12.141 c 23.617 12.871
 23.547 13.602 23.406 14.313 c 23.813 15.199 24.016 16.145 24.016 17.129
 c 24.016 20.914 20.887 24 17.039 24 c h
14.215 21.738 m 14.445 21.859 l 15.25 22.285 16.121 22.5 17.039 22.5 c 
20.059 22.5 22.516 20.09 22.516 17.125 c 22.516 16.289 22.324 15.488 21.949
 14.746 c 21.828 14.504 l 21.887 14.242 l 22.039 13.555 22.117 12.848 22.117
 12.141 c 22.117 6.73 17.637 2.328 12.129 2.328 c 11.559 2.328 10.98 2.379
 10.414 2.473 c 10.137 2.52 l 9.895 2.371 l 9.023 1.828 8.012 1.543 6.977
 1.543 c 3.957 1.547 1.5 3.957 1.5 6.918 c 1.5 7.871 1.758 8.813 2.25 9.633
 c 2.398 9.883 l 2.34 10.172 l 2.207 10.813 2.141 11.477 2.141 12.141 c 
2.141 17.551 6.621 21.949 12.129 21.949 c 12.742 21.949 13.359 21.895 13.961
 21.785 c h
14.215 21.738 m f
12.027 18.664 m 10.238 18.664 9.016 18.063 8.309 17.555 c 7.449 16.941 
6.836 16.098 6.66 15.301 c 6.5 14.57 l 7.965 14.25 l 8.125 14.98 l 8.277
 15.664 9.465 17.164 12.027 17.164 c 15.91 17.164 15.91 15.492 15.91 14.945
 c 15.91 13.527 14.242 13.02 12.059 12.504 c 11.898 12.465 11.738 12.43 
11.574 12.395 c 9.641 11.953 6.992 11.352 7.047 8.59 c 7.07 7.43 7.777 6.473
 9.039 5.891 c 9.875 5.508 10.992 5.277 12.027 5.277 c 14.488 5.277 16.266
 6.371 16.781 8.203 c 16.984 8.926 l 15.539 9.332 l 15.336 8.609 l 14.871
 6.957 12.867 6.777 12.027 6.777 c 11.137 6.777 8.578 7.117 8.547 8.617 
c 8.52 10.055 9.797 10.449 11.906 10.93 c 12.074 10.969 12.238 11.004 12.402
 11.043 c 14.398 11.516 17.414 12.227 17.414 14.945 c 17.41 16.332 16.711
 18.664 12.027 18.664 c h
12.027 18.664 m f
Q Q
showpage
%%Trailer
%%EOF
