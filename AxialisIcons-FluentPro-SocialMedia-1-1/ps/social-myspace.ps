%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:14 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 3 24 19
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 3 24 19
24 24 cairo_set_page_size
%%EndPageSetup
q 0 3 24 16 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
6.75 21 m 0 21 l 0 18.492 l 0 16.824 1.355 15.039 3.375 15.039 c 5.234 
15.039 6.75 16.586 6.75 18.492 c h
1.5 19.5 m 5.25 19.5 l 5.25 18.492 l 5.25 17.414 4.41 16.539 3.375 16.539
 c 2.27 16.539 1.5 17.566 1.5 18.492 c h
3.375 14.25 m 1.723 14.25 0.375 12.906 0.375 11.25 c 0.375 10.449 0.688
 9.695 1.254 9.129 c 1.82 8.563 2.574 8.25 3.375 8.25 c 5.031 8.25 6.375
 9.594 6.375 11.25 c 6.375 12.051 6.063 12.805 5.496 13.371 c 4.93 13.938
 4.176 14.25 3.375 14.25 c h
3.375 9.75 m 2.973 9.75 2.598 9.906 2.316 10.191 c 2.031 10.473 1.875 10.848
 1.875 11.25 c 1.875 12.078 2.547 12.75 3.375 12.75 c 4.203 12.75 4.875 
12.078 4.875 11.25 c 4.875 10.422 4.203 9.75 3.375 9.75 c h
3.375 9.75 m f
14.984 21 m 7.5 21 l 7.5 18.246 l 7.5 16.395 9.004 14.414 11.242 14.414
 c 13.305 14.414 14.984 16.133 14.984 18.246 c h
9 19.5 m 13.484 19.5 l 13.484 18.246 l 13.484 16.961 12.48 15.914 11.242
 15.914 c 9.922 15.914 9 17.141 9 18.246 c h
11.242 13.305 m 9.414 13.305 7.926 11.816 7.926 9.988 c 7.926 9.105 8.273
 8.273 8.898 7.645 c 9.523 7.02 10.355 6.676 11.242 6.676 c 13.07 6.676 
14.559 8.16 14.559 9.988 c 14.559 10.875 14.215 11.707 13.586 12.332 c 12.961
 12.961 12.129 13.305 11.242 13.305 c h
11.242 8.176 m 10.758 8.176 10.301 8.363 9.961 8.707 c 9.617 9.051 9.426
 9.504 9.426 9.988 c 9.426 10.992 10.242 11.805 11.242 11.805 c 11.727 11.805
 12.184 11.617 12.527 11.273 c 12.867 10.93 13.059 10.473 13.059 9.988 c
 13.059 8.988 12.242 8.176 11.242 8.176 c h
11.242 8.176 m f
24.004 21 m 15.75 21 l 15.75 17.988 l 15.75 15.945 17.41 13.758 19.879 
13.758 c 22.152 13.758 24.004 15.656 24.004 17.988 c h
17.25 19.5 m 22.504 19.5 l 22.504 17.988 l 22.504 16.484 21.328 15.258 
19.879 15.258 c 18.328 15.258 17.25 16.695 17.25 17.988 c h
19.879 12.316 m 18.902 12.316 17.988 11.938 17.301 11.246 c 16.613 10.559
 16.23 9.645 16.23 8.672 c 16.23 7.695 16.609 6.781 17.301 6.094 c 17.988
 5.406 18.902 5.023 19.879 5.023 c 21.887 5.023 23.523 6.66 23.523 8.668
 c 23.523 10.68 21.887 12.316 19.879 12.316 c h
19.879 6.523 m 19.305 6.523 18.766 6.75 18.359 7.152 c 17.957 7.559 17.73
 8.098 17.734 8.672 c 17.734 9.242 17.957 9.781 18.363 10.188 c 18.766 10.59
 19.305 10.816 19.879 10.816 c 21.063 10.816 22.023 9.852 22.023 8.672 c
 22.023 7.488 21.059 6.523 19.879 6.523 c h
19.879 6.523 m f
Q Q
showpage
%%Trailer
%%EOF
