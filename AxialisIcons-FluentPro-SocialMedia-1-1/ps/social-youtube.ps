%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:38 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 3 24 21
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 3 24 21
24 24 cairo_set_page_size
%%EndPageSetup
q 0 3 24 18 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
12.383 21 m 11.633 21 10.859 20.992 10.055 20.98 c 5.617 20.895 4.219 20.82
 3.262 20.613 c 2.504 20.453 1.84 20.09 1.352 19.566 c 0.961 19.16 0.668
 18.582 0.449 17.797 c 0.266 17.16 0.199 16.602 0.117 15.52 c 0.113 15.5
 l -0.039 12.637 -0.039 10.605 0.117 8.484 c 0.117 8.457 l 0.129 8.34 0.141
 8.219 0.156 8.094 c 0.285 6.789 0.438 5.309 1.461 4.316 c 2.004 3.797 2.633
 3.465 3.34 3.328 c 4.41 3.113 8.605 3 12.008 3 c 15.41 3 19.605 3.113 20.68
 3.328 c 21.566 3.5 22.395 4.016 22.895 4.707 c 22.93 4.758 l 23.781 6.156
 23.875 7.797 23.949 9.113 c 23.957 9.25 23.965 9.383 23.973 9.512 c 24.008
 10.191 24.008 13.809 23.973 14.48 c 23.844 16.543 23.734 17.434 23.383 
18.336 c 23.168 18.902 22.957 19.25 22.609 19.617 c 22.063 20.176 21.379
 20.539 20.629 20.672 c 20.559 20.684 l 17.801 20.898 15.254 21 12.383 21
 c h
10.082 19.48 m 13.902 19.543 16.988 19.457 20.398 19.191 c 20.828 19.105
 21.219 18.895 21.531 18.574 c 21.711 18.383 21.82 18.227 21.984 17.801 
c 22.246 17.121 22.348 16.422 22.473 14.391 c 22.508 13.793 22.508 10.207
 22.473 9.602 c 22.465 9.477 22.457 9.34 22.449 9.199 c 22.383 8 22.305 
6.641 21.664 5.566 c 21.383 5.191 20.895 4.898 20.391 4.797 c 19.664 4.656
 16.254 4.5 12.008 4.5 c 7.762 4.5 4.352 4.656 3.629 4.797 c 3.207 4.879
 2.828 5.082 2.504 5.395 c 1.871 6.004 1.758 7.145 1.648 8.242 c 1.637 8.367
 1.621 8.484 1.609 8.605 c 1.465 10.652 1.465 12.625 1.613 15.41 c 1.695
 16.504 1.754 16.91 1.895 17.391 c 2.043 17.93 2.227 18.313 2.438 18.535
 c 2.441 18.539 l 2.723 18.84 3.117 19.051 3.574 19.145 c 4.402 19.324 5.859
 19.398 10.082 19.48 c h
8.25 16.992 m 8.25 6.992 l 9.336 7.531 l 10.652 8.188 11.852 8.844 13.012
 9.48 c 14.098 10.074 15.223 10.691 16.465 11.316 c 17.773 11.98 l 16.469
 12.656 l 16.422 12.68 11.844 15.035 9.359 16.391 c h
9.75 9.43 m 9.75 14.477 l 11.328 13.633 13.25 12.633 14.492 11.988 c 13.727
 11.582 13 11.184 12.289 10.797 c 11.438 10.328 10.617 9.879 9.75 9.43 c
 h
9.75 9.43 m f
Q Q
showpage
%%Trailer
%%EOF
