%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:10 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 4 24 18
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 4 24 18
24 24 cairo_set_page_size
%%EndPageSetup
q 0 4 24 14 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
18.598 19.5 m 16.555 19.5 15.02 19.066 13.906 18.176 c 12.953 17.41 12.285
 16.328 11.742 14.664 c 10.793 11.656 l 9.887 8.859 8.277 7.5 5.871 7.5 
c 3.695 7.5 1.5 9.168 1.5 12.895 c 1.5 15.234 2.605 17.961 5.727 17.961 
c 6.723 17.961 7.703 17.664 8.641 17.074 c 9.277 16.676 l 10.074 17.949 
l 9.438 18.348 l 8.277 19.078 6.992 19.465 5.727 19.465 c 1.77 19.461 0 
16.164 0 12.895 c 0 10.789 0.625 9.008 1.809 7.754 c 2.875 6.625 4.32 6 
5.871 6 c 7.617 6 9.082 6.574 10.223 7.711 c 11.074 8.555 11.746 9.73 12.223
 11.199 c 13.172 14.203 l 13.973 16.664 15.074 18 18.598 18 c 21.059 18 
22.469 17.23 22.469 15.891 c 22.469 14.875 22.285 13.992 20.035 13.461 c
 17.957 13.035 l 17.578 12.945 16.785 12.766 16.066 12.27 c 15.129 11.621
 14.633 10.645 14.633 9.457 c 14.633 7.785 16.102 6.094 18.918 6.094 c 20.047
 6.094 22.75 6.266 23.461 7.867 c 23.766 8.551 l 22.398 9.164 l 22.094 8.477
 l 21.934 8.125 20.957 7.594 18.918 7.594 c 17.09 7.594 16.133 8.531 16.133
 9.457 c 16.133 10.887 17.223 11.328 18.289 11.574 c 18.32 11.578 l 20.371
 12 l 22.895 12.594 23.969 13.758 23.969 15.891 c 23.969 16.734 23.582 19.5
 18.598 19.5 c h
18.598 19.5 m f
Q Q
showpage
%%Trailer
%%EOF
