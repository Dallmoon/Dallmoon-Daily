%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:28:50 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 4 24 21
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 4 24 21
24 24 cairo_set_page_size
%%EndPageSetup
q 0 4 24 17 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
15 4.5 6.75 1.5 re f
18.805 19.492 m 17.902 19.492 17.074 19.355 16.344 19.078 c 15.508 18.762
 14.848 18.148 14.426 17.715 c 13.93 17.203 13.516 16.508 13.223 15.699 
c 12.961 14.984 12.813 14.008 12.813 13.016 c 12.813 12.184 12.945 11.406
 13.211 10.707 c 13.484 9.992 13.887 9.367 14.406 8.852 c 14.922 8.34 15.559
 7.938 16.301 7.656 c 17.027 7.379 17.852 7.238 18.758 7.238 c 19.461 7.238
 20.133 7.348 20.762 7.566 c 21.406 7.789 21.977 8.125 22.461 8.563 c 22.945
 9.004 23.332 9.555 23.605 10.188 c 23.898 10.859 24 11.988 24 12.75 c 24
 13.5 l 14.324 13.5 l 14.363 14.141 14.473 14.75 14.633 15.188 c 14.852 
15.797 15.152 16.309 15.5 16.668 c 15.824 17 16.316 17.465 16.875 17.676
 c 17.434 17.887 18.082 17.992 18.805 17.992 c 19.219 17.992 19.625 17.957
 20.012 17.883 c 20.41 17.809 20.777 17.711 21.109 17.594 c 21.434 17.477
 21.715 17.352 21.945 17.219 c 22.184 17.082 22.555 16.813 22.633 16.73 
c 23.719 17.766 l 23.504 17.992 22.977 18.355 22.691 18.52 c 22.383 18.699
 22.02 18.859 21.609 19.004 c 21.207 19.148 20.766 19.266 20.293 19.355 
c 19.813 19.449 19.309 19.492 18.805 19.492 c h
14.402 12 m 22.465 12 l 22.422 11.488 22.336 11.023 22.23 10.785 c 22.039
 10.344 21.777 9.969 21.449 9.672 c 21.117 9.371 20.723 9.141 20.273 8.984
 c 19.805 8.824 19.293 8.742 18.758 8.742 c 18.035 8.742 17.387 8.848 16.832
 9.059 c 16.289 9.266 15.828 9.555 15.461 9.918 c 15.094 10.281 14.809 10.727
 14.613 11.238 c 14.523 11.48 14.453 11.734 14.402 12 c h
14.402 12 m f
0 g
5.223 12 m 0 12 l 0 3 l 5.098 3 l 7.094 3 8.559 3.363 9.582 4.109 c 10.652
 4.887 11.215 6.051 11.215 7.477 c 11.215 7.996 11.102 8.527 10.871 9.059
 c 10.621 9.641 10.238 10.168 9.766 10.578 c 9.281 11 8.652 11.348 7.898
 11.613 c 7.16 11.867 6.258 12 5.223 12 c h
1.5 10.5 m 5.223 10.5 l 6.09 10.5 6.824 10.398 7.406 10.195 c 7.977 9.996
 8.441 9.742 8.785 9.445 c 9.082 9.188 9.336 8.84 9.496 8.465 c 9.641 8.125
 9.715 7.793 9.715 7.477 c 9.715 6.539 9.375 5.813 8.699 5.32 c 7.953 4.777
 6.742 4.5 5.098 4.5 c 1.5 4.5 l h
1.5 10.5 m f
5.77 19.5 m 0 19.5 l 0 10.5 l 5.797 10.5 l 6.68 10.5 7.496 10.594 8.23 
10.781 c 8.988 10.973 9.648 11.258 10.191 11.633 c 10.754 12.02 11.199 12.496
 11.516 13.055 c 11.844 13.641 12 14.23 12 14.91 c 12 15.652 11.855 16.285
 11.551 16.891 c 11.246 17.492 10.805 17.996 10.227 18.391 c 9.684 18.766
 9.02 19.047 8.254 19.234 c 7.52 19.41 6.684 19.5 5.77 19.5 c h
1.5 18 m 5.77 18 l 6.566 18 7.281 17.926 7.902 17.773 c 8.488 17.633 8.984
 17.426 9.379 17.152 c 9.746 16.898 10.02 16.594 10.211 16.215 c 10.41 15.82
 10.5 15.418 10.5 14.91 c 10.5 14.488 10.414 14.156 10.207 13.793 c 10.004
 13.434 9.719 13.129 9.34 12.867 c 8.945 12.598 8.445 12.383 7.859 12.234
 c 7.246 12.078 6.555 12 5.797 12 c 1.5 12 l h
1.5 18 m f
Q Q
showpage
%%Trailer
%%EOF
