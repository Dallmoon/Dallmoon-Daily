%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:30 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 0 24 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
18.973 12.664 m 18.027 12.664 16.879 12.313 15.684 11.145 c 15.469 10.938
 l 15.414 10.973 l 15.258 10.734 l 15.145 10.621 l 15.168 10.598 l 15.004
 10.344 l 14.34 9.32 13.59 6.871 15.527 4.93 c 15.676 4.777 16.531 3.965
 18.617 3.438 c 18.645 3.434 l 18.707 3.418 20.332 3.027 21.242 1.105 c 
21.789 -0.043 l 22.531 0.984 l 22.633 1.129 25.008 4.5 23.508 8.961 c 23.5
 8.98 l 23.465 9.066 22.695 11.109 21.043 12.086 c 20.637 12.324 19.902 
12.664 18.973 12.664 c h
16.422 9.773 m 16.727 10.07 l 18.219 11.523 19.484 11.266 20.281 10.793
 c 21.422 10.121 22.043 8.586 22.09 8.469 c 22.891 6.082 22.371 4.078 21.879
 2.922 c 20.688 4.453 19.18 4.848 18.977 4.895 c 17.332 5.313 16.676 5.906
 16.613 5.965 c 16.594 5.984 l 15.031 7.543 16.215 9.449 16.266 9.527 c 
h
16.422 9.773 m f
9.047 23.977 m 4.07 23.977 0.023 19.949 0.023 15.004 c 0.023 10.059 4.07
 6.031 9.047 6.031 c 10.152 6.031 11.23 6.23 12.254 6.617 c 12.957 6.883
 l 12.426 8.285 l 11.727 8.02 l 10.871 7.695 9.969 7.531 9.047 7.531 c 4.898
 7.531 1.523 10.883 1.523 15.004 c 1.523 19.125 4.898 22.477 9.047 22.477
 c 13.199 22.477 16.574 19.125 16.574 15.004 c 16.574 14.254 l 18.074 14.254
 l 18.074 15.004 l 18.074 19.949 14.023 23.977 9.047 23.977 c h
9.047 23.977 m f
9.008 21.082 m 7.875 20.102 l 8.363 19.535 l 8.719 19.125 9.063 18.742 
9.391 18.371 c 11.32 16.219 12.711 14.664 13.152 11.301 c 13.25 10.559 l
 14.738 10.754 l 14.641 11.496 l 14.137 15.32 12.535 17.109 10.508 19.371
 c 10.184 19.738 9.848 20.113 9.5 20.516 c h
9.008 21.082 m f
Q Q
showpage
%%Trailer
%%EOF
