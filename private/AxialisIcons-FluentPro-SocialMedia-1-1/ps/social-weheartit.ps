%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:32 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 1 24 23
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 1 24 23
24 24 cairo_set_page_size
%%EndPageSetup
q 0 1 24 22 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
12.008 22.605 m 11.645 22.414 l 11.645 22.414 11.316 22.238 11.156 22.152
 c 11.148 22.148 l 8.188 20.48 5.977 18.891 4.184 17.137 c 1.813 14.813 
0.512 12.539 0.094 9.973 c 0.039 9.648 0.031 9.34 0.023 9.039 c 0.02 8.906
 0.016 8.777 0.008 8.652 c -0.176 5.395 2.473 2.07 5.68 1.535 c 7.004 1.313
 8.152 1.715 9.102 2.141 c 10.113 2.586 11.086 3.219 12 4.02 c 13.09 3.016
 14.156 2.309 15.168 1.918 c 17.398 1.039 19.613 1.477 21.559 3.184 c 22.789
 4.266 23.566 5.563 23.867 7.047 c 24.16 8.492 23.984 10.043 23.348 11.652
 c 22.258 14.41 20.246 16.422 18.617 17.863 c 16.66 19.59 14.719 21.023 
12.84 22.129 c 12.652 22.238 12.367 22.402 12.367 22.402 c h
11.883 20.84 m 11.914 20.855 11.945 20.875 11.984 20.895 c 12.02 20.871
 12.055 20.852 12.086 20.836 c 13.875 19.781 15.742 18.402 17.625 16.742
 c 19.129 15.41 20.98 13.563 21.953 11.102 c 23.012 8.434 22.52 6.023 20.57
 4.313 c 19.031 2.961 17.441 2.633 15.711 3.316 c 14.859 3.648 13.938 4.266
 12.965 5.164 c 12.738 5.375 12.48 5.57 12.469 5.578 c 12.023 5.918 l 11.57
 5.586 l 11.535 5.559 11.203 5.313 11.031 5.164 c 10.223 4.453 9.371 3.898
 8.492 3.508 c 7.711 3.16 6.859 2.859 5.926 3.016 c 3.473 3.422 1.363 6.066
 1.508 8.563 c 1.516 8.711 1.52 8.859 1.523 9.004 c 1.527 9.258 1.535 9.504
 1.574 9.727 c 1.938 11.965 3.102 13.977 5.234 16.063 c 6.953 17.746 9.004
 19.219 11.883 20.84 c h
11.883 20.84 m f
Q Q
showpage
%%Trailer
%%EOF
