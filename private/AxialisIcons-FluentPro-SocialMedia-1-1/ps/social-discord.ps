%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:28:56 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 3 24 22
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 3 24 22
24 24 cairo_set_page_size
%%EndPageSetup
q 0 3 24 19 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
16.156 20.477 m 14.949 18.27 l 14.07 18.414 13.086 18.5 11.977 18.5 c 10.859
 18.5 9.875 18.418 9 18.277 c 7.797 20.477 l 7.289 20.41 l 7.117 20.391 
2.988 19.836 0.199 16.824 c -0.02 16.59 l 0 16.266 l 0.457 9.16 3.094 5.504
 3.207 5.352 c 3.238 5.313 l 3.273 5.273 l 3.371 5.172 5.707 2.785 8.848
 2.508 c 9.371 2.461 l 10.352 4.547 l 10.871 4.484 11.414 4.453 11.977 4.453
 c 12.551 4.453 13.109 4.5 13.645 4.582 c 14.563 2.469 l 15.09 2.508 l 18.102
 2.723 20.566 5.16 20.672 5.266 c 20.711 5.305 l 20.746 5.352 l 20.855 5.504
 23.492 9.16 23.953 16.266 c 23.973 16.586 l 23.754 16.824 l 20.965 19.836
 16.836 20.391 16.664 20.41 c h
16.473 17.93 m 16.969 18.832 l 18.023 18.609 20.559 17.902 22.434 16.035
 c 21.977 9.988 19.855 6.703 19.57 6.285 c 19.281 6.012 17.543 4.438 15.504
 4.066 c 15.133 4.914 l 16.285 5.254 17.238 5.73 17.855 6.168 c 18.469 6.602
 l 17.605 7.828 l 16.992 7.395 l 16.23 6.859 14.32 5.949 11.977 5.949 c 
9.105 5.949 7.559 6.84 6.891 7.367 c 6.301 7.836 l 5.367 6.66 l 5.957 6.195
 l 6.723 5.586 7.699 5.125 8.828 4.832 c 8.469 4.074 l 6.328 4.465 4.656
 6.02 4.387 6.281 c 4.117 6.68 1.977 9.996 1.52 16.035 c 3.391 17.902 5.93
 18.609 6.984 18.836 c 7.473 17.945 l 5.773 17.473 4.59 16.77 3.676 16.121
 c 3.066 15.688 l 3.934 14.465 l 4.547 14.898 l 6.012 15.938 8.043 17 11.977
 17 c 15.906 17 18.051 15.836 19.48 14.824 c 20.094 14.391 l 20.961 15.613
 l 20.352 16.047 l 19.406 16.715 18.191 17.441 16.473 17.93 c h
16.473 17.93 m f
8.344 14.176 m 6.887 14.176 5.699 13.031 5.699 11.621 c 5.699 10.215 6.887
 9.07 8.344 9.07 c 9.801 9.07 10.988 10.215 10.988 11.621 c 10.988 13.031
 9.801 14.176 8.344 14.176 c h
8.344 10.418 m 7.629 10.418 7.051 10.961 7.051 11.621 c 7.051 12.285 7.629
 12.824 8.344 12.824 c 9.059 12.824 9.637 12.285 9.637 11.621 c 9.637 10.961
 9.059 10.418 8.344 10.418 c h
8.344 10.418 m f
15.656 14.176 m 14.199 14.176 13.012 13.031 13.012 11.621 c 13.012 10.215
 14.199 9.07 15.656 9.07 c 17.113 9.07 18.301 10.215 18.301 11.621 c 18.301
 13.031 17.113 14.176 15.656 14.176 c h
15.656 10.418 m 14.941 10.418 14.363 10.961 14.363 11.621 c 14.363 12.285
 14.941 12.824 15.656 12.824 c 16.371 12.824 16.949 12.285 16.949 11.621
 c 16.949 10.961 16.371 10.418 15.656 10.418 c h
15.656 10.418 m f
Q Q
showpage
%%Trailer
%%EOF
