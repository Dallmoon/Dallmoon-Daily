%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:01 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 23 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 23 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 22 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
12.086 24.004 m 9.387 24.004 6.711 22.93 4.738 21.059 c 2.66 19.09 1.512
 16.426 1.5 13.559 c 1.477 7.344 6.367 4.563 6.969 4.246 c 7.203 4.113 7.422
 4 7.633 3.891 c 8.262 3.559 8.805 3.273 9.57 2.664 c 9.902 2.379 10.266
 1.961 10.398 0.688 c 10.434 0.375 10.648 0.113 10.949 0.023 c 11.25 -0.07
 11.574 0.027 11.777 0.27 c 12.277 0.867 13.32 2.113 13.945 2.539 c 14.449
 2.871 14.969 3.105 15.516 3.355 c 16.063 3.602 16.625 3.859 17.219 4.23
 c 17.238 4.242 l 18.367 4.949 19.348 5.82 20.152 6.828 c 21.699 8.773 22.492
 11.066 22.5 13.645 c 22.512 16.57 21.414 19.23 19.406 21.145 c 17.484 22.977
 14.898 23.992 12.129 24.004 c 12.113 24.004 12.098 24.004 12.086 24.004
 c h
11.57 2.328 m 11.293 3.074 10.906 3.496 10.531 3.813 c 10.516 3.828 l 9.637
 4.531 9 4.867 8.328 5.219 c 8.125 5.324 7.914 5.434 7.691 5.559 c 7.676
 5.566 l 7.195 5.82 2.977 8.191 3 13.555 c 3.008 16.004 3.992 18.285 5.77
 19.973 c 7.477 21.59 9.793 22.512 12.121 22.504 c 17.203 22.48 21.02 18.676
 21 13.652 c 20.98 9.043 18.133 6.574 16.438 5.512 c 16.418 5.5 l 15.91 
5.184 15.418 4.961 14.895 4.723 c 14.316 4.461 13.719 4.188 13.109 3.785
 c 13.105 3.781 l 12.645 3.469 12.105 2.926 11.57 2.328 c h
10.625 1.23 m h
10.625 1.23 m f
8.766 18.09 m 7.559 18.09 7.055 17.902 6.504 17.531 c 6.484 17.52 l 5.934
 17.125 5.289 16.363 5.313 14.961 c 5.332 12.945 7.129 11.207 9.242 11.176
 c 9.262 11.176 9.277 11.176 9.297 11.176 c 10.836 11.176 12.031 12.043 
12.996 12.742 c 13.41 13.039 13.977 13.453 14.199 13.453 c 14.203 13.453
 14.203 13.453 14.203 13.453 c 14.465 13.441 15.227 12.898 15.684 12.574
 c 16.52 11.977 17.246 11.461 17.934 11.457 c 18.633 11.453 19.215 11.801
 19.57 12.434 c 19.887 12.996 19.926 13.617 19.926 13.855 c 19.926 13.859
 l 19.93 14.438 19.77 15.777 19.156 16.711 c 18.695 17.414 18.199 18.043
 17.188 17.973 c 17.18 17.973 l 16.574 17.922 16.055 17.379 15.398 16.695
 c 15.074 16.355 14.469 15.723 14.219 15.648 c 13.934 15.664 13.125 16.176
 12.582 16.52 c 11.418 17.254 10.102 18.086 8.816 18.09 c 8.797 18.09 8.781
 18.09 8.766 18.09 c h
7.348 16.293 m 7.598 16.461 7.809 16.59 8.766 16.59 c 8.777 16.59 8.793
 16.59 8.809 16.59 c 9.664 16.586 10.84 15.848 11.781 15.25 c 12.215 14.977
 12.605 14.73 12.969 14.539 c 12.691 14.371 12.414 14.168 12.113 13.953 
c 11.277 13.348 10.328 12.66 9.266 12.676 c 7.969 12.695 6.824 13.773 6.813
 14.98 c 6.797 15.793 7.109 16.117 7.348 16.293 c h
15.352 14.59 m 15.73 14.871 16.098 15.258 16.48 15.656 c 16.754 15.945 
17.164 16.371 17.352 16.48 c 17.457 16.473 17.57 16.398 17.898 15.891 c 
18.266 15.336 18.426 14.371 18.426 13.863 c 18.426 13.664 18.383 13.379 
18.262 13.168 c 18.152 12.973 18.047 12.957 17.938 12.957 c 17.699 12.98
 16.98 13.492 16.551 13.797 c 16.141 14.09 15.738 14.375 15.352 14.59 c 
h
14.207 15.645 m h
14.207 15.645 m f
12.27 20.926 m 11.547 20.926 10.805 20.797 10.094 20.465 c 9.414 20.145
 l 10.055 18.789 l 10.73 19.105 l 12.313 19.848 14.258 19.141 15.277 18.652
 c 15.953 18.328 l 16.602 19.68 l 15.926 20.004 l 15.082 20.41 13.719 20.926
 12.27 20.926 c h
12.27 20.926 m f
Q Q
showpage
%%Trailer
%%EOF
