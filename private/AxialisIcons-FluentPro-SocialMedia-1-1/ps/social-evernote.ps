%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:05 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 23 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 23 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 22 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
1.5 w
2 J
0 j
[] 0.0 d
1 M q 1 0 0 1 0 0 cm
15.395 20.617 m 17.121 20.617 17.789 20.063 17.789 18.547 c 17.789 16.059
 17.063 16.203 16.055 16.09 c 14.941 15.965 13.848 15.801 13.32 15.621 c
 11.984 15.164 12.078 13.457 12.078 12.977 c 12.078 12.902 11.461 12.906
 11.461 12.977 c 11.461 13.66 11.484 14.602 11.121 15.668 c 11.008 15.973
 10.922 16.184 10.922 16.184 c 10.504 17.035 9.898 16.742 8.777 16.605 c
 7.652 16.465 5.598 15.984 4.547 15.551 c 4.078 15.34 3.918 15.141 3.68 
14.66 c 3.063 13.43 2.41 9.387 2.328 8.809 c 2.234 8.059 2.23 7.672 2.23
 7.672 c 2.191 4.703 7.453 0.973 8.703 0.891 c 9.25 0.855 11.301 0.621 12.641
 1.141 c 13.145 1.34 13.594 1.902 13.688 2.52 c 14.465 2.496 15.758 2.488
 16.852 2.613 c 18.215 2.766 19.305 2.961 19.84 3.148 c 20.336 3.32 21.125
 3.758 21.297 4.648 c 21.59 6.176 21.965 12.215 21.773 14.215 c 21.469 17.379
 20.969 19.262 20.762 19.883 c 19.719 23.008 18.586 23.254 16.055 23.211
 c 14.109 23.176 11.996 23.629 11.996 21.137 c 11.996 18.395 12.762 18.316
 15.039 18.375 c 18.203 11.648 m 18.203 11.648 18.207 11.648 18.203 11.648
 c 18.203 11.012 18.059 10.07 17.027 10.039 c 16.969 10.035 16.91 10.035
 16.859 10.039 c 16.852 10.039 16.844 10.043 16.836 10.043 c 16.828 10.043
 16.824 10.043 16.82 10.043 c 16.055 10.121 15.824 10.809 15.75 11.375 c
 15.762 11.375 15.77 11.371 15.781 11.371 c 15.863 11.359 15.945 11.352 
16.027 11.34 c 16.035 11.34 16.043 11.34 16.051 11.34 c 16.059 11.34 16.066
 11.336 16.078 11.336 c 16.258 11.32 16.449 11.316 16.641 11.324 c 16.641
 11.324 16.645 11.324 16.645 11.324 c 16.66 11.324 16.676 11.324 16.688 
11.324 c 16.691 11.324 16.695 11.324 16.699 11.324 c 16.699 11.324 16.699
 11.324 16.703 11.324 c 16.898 11.336 17.09 11.355 17.27 11.383 c 17.613
 11.441 17.93 11.531 18.203 11.648 c h
18.203 11.648 m S Q
8.063 8.25 m 4.539 8.25 l 4.539 6.75 l 8.063 6.75 l 8.586 6.75 9.012 6.355
 9.012 5.867 c 9.012 2.453 l 10.512 2.453 l 10.512 5.867 l 10.512 7.18 9.414
 8.25 8.063 8.25 c h
8.063 8.25 m f
Q Q
showpage
%%Trailer
%%EOF
