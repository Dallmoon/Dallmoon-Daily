%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:29 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 1 24 23
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 1 24 23
24 24 cairo_set_page_size
%%EndPageSetup
q 0 1 24 22 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
7.715 22.496 m 5.133 22.496 2.605 21.77 0.398 20.391 c 0.074 20.188 -0.066
 19.793 0.051 19.43 c 0.176 19.066 0.527 18.836 0.906 18.867 c 2.527 19.008
 4.094 18.695 5.492 17.98 c 3.98 17.465 2.527 16.398 1.969 14.754 c 1.875
 14.48 1.934 14.176 2.121 13.957 c 2.215 13.844 2.34 13.762 2.473 13.711
 c 2.191 13.5 1.93 13.266 1.691 13.012 c 0.797 12.051 0.32 10.891 0.32 9.66
 c 0.32 9.316 l 0.582 9.094 l 0.844 8.867 1.109 8.902 1.363 8.938 c 1.426
 8.949 1.508 8.957 1.594 8.973 c 1.043 8.086 0.734 7.043 0.734 5.969 c 0.734
 5.035 0.965 4.109 1.402 3.293 c 1.535 3.051 1.777 2.887 2.055 2.863 c 2.332
 2.836 2.598 2.949 2.773 3.168 c 4.824 5.707 7.758 7.352 10.918 7.754 c 
10.914 7.664 10.91 7.574 10.91 7.484 c 10.91 4.414 13.352 1.918 16.352 1.918
 c 17.703 1.918 19.016 2.441 20.012 3.367 c 20.777 3.172 21.512 2.875 22.199
 2.477 c 22.496 2.301 22.879 2.336 23.145 2.555 c 23.41 2.777 23.508 3.145
 23.391 3.469 c 23.289 3.754 23.164 4.027 23.023 4.289 c 23.316 4.23 23.617
 4.34 23.813 4.578 c 24.047 4.867 24.063 5.266 23.852 5.57 c 23.273 6.41
 22.586 7.152 21.801 7.777 c 21.805 7.863 21.805 7.949 21.805 8.039 c 21.805
 11.543 20.484 15.09 18.188 17.77 c 16.934 19.227 15.445 20.375 13.758 21.176
 c 11.918 22.055 9.887 22.496 7.715 22.496 c h
3.465 20.234 m 4.824 20.738 6.258 20.996 7.715 20.996 c 15.594 20.996 20.305
 14.41 20.305 8.039 c 20.305 7.848 20.301 7.664 20.293 7.492 c 20.281 7.215
 20.402 6.957 20.625 6.793 c 20.801 6.66 20.973 6.523 21.137 6.379 c 20.758
 6.438 20.391 6.234 20.246 5.879 c 20.102 5.523 20.215 5.117 20.527 4.891
 c 20.605 4.836 20.68 4.777 20.754 4.719 c 20.496 4.797 20.23 4.859 19.969
 4.918 c 19.688 4.977 19.391 4.879 19.195 4.672 c 18.441 3.863 17.434 3.418
 16.352 3.418 c 14.18 3.418 12.41 5.242 12.41 7.484 c 12.41 7.773 12.441
 8.059 12.496 8.336 c 12.547 8.586 12.477 8.848 12.313 9.043 c 12.141 9.238
 11.895 9.34 11.637 9.324 c 8.125 9.117 4.801 7.543 2.355 4.965 c 2.277 
5.293 2.234 5.629 2.234 5.973 c 2.234 7.266 2.813 8.457 3.816 9.234 c 4.113
 9.461 4.219 9.844 4.082 10.191 c 3.945 10.535 3.609 10.742 3.238 10.711
 c 2.914 10.68 2.402 10.609 1.945 10.543 c 2.367 11.988 3.777 12.996 5.105
 13.363 c 5.473 13.469 5.723 13.809 5.707 14.188 c 5.695 14.57 5.422 14.895
 5.047 14.969 c 4.984 14.984 4.895 15.016 4.797 15.051 c 4.574 15.129 4.293
 15.23 3.969 15.23 c 3.957 15.23 3.945 15.23 3.934 15.23 c 4.738 16.195 
6.113 16.754 7.309 16.832 c 7.652 16.855 7.949 17.09 8.047 17.414 c 8.148
 17.746 8.035 18.098 7.762 18.309 c 6.48 19.297 5.02 19.949 3.465 20.234
 c h
2.641 15.156 m 2.641 15.156 2.641 15.156 2.645 15.156 c 2.641 15.156 2.641
 15.156 2.641 15.156 c h
2.641 15.156 m f
Q Q
showpage
%%Trailer
%%EOF
