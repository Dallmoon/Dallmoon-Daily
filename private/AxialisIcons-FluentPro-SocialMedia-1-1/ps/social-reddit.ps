%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:20 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 2 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 2 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 0 2 24 22 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
11.996 21.75 m 9.32 21.75 6.797 21 4.887 19.645 c 2.902 18.23 1.809 16.324
 1.809 14.281 c 1.809 12.238 2.902 10.332 4.887 8.918 c 6.797 7.563 9.32
 6.813 11.996 6.813 c 14.672 6.813 17.199 7.563 19.105 8.918 c 21.094 10.332
 22.188 12.238 22.188 14.281 c 22.188 16.324 21.094 18.23 19.105 19.645 
c 17.199 21 14.672 21.75 11.996 21.75 c h
11.996 8.313 m 9.629 8.313 7.414 8.961 5.758 10.141 c 4.18 11.266 3.309
 12.734 3.309 14.281 c 3.309 15.828 4.18 17.297 5.758 18.422 c 7.414 19.602
 9.629 20.25 11.996 20.25 c 14.363 20.25 16.578 19.602 18.234 18.422 c 19.816
 17.297 20.688 15.828 20.688 14.281 c 20.688 12.734 19.816 11.266 18.234
 10.141 c 16.578 8.961 14.363 8.313 11.996 8.313 c h
11.996 8.313 m f
2.871 14.469 m 2.164 14.223 l 0.859 13.773 -0.02 12.512 -0.02 11.082 c 
-0.02 9.258 1.41 7.773 3.168 7.773 c 4.148 7.773 5.059 8.23 5.664 9.027 
c 6.121 9.625 l 4.93 10.531 l 4.473 9.938 l 4.152 9.516 3.676 9.273 3.168
 9.273 c 2.238 9.273 1.48 10.082 1.48 11.082 c 1.48 11.871 1.953 12.563 
2.652 12.805 c 3.359 13.051 l h
2.871 14.469 m f
21.125 14.469 m 20.633 13.051 l 21.344 12.805 l 22.043 12.563 22.512 11.871
 22.512 11.082 c 22.512 10.086 21.758 9.273 20.824 9.273 c 20.32 9.273 19.844
 9.516 19.52 9.938 c 19.066 10.531 l 17.875 9.625 l 18.328 9.027 l 18.938
 8.23 19.848 7.773 20.824 7.773 c 22.582 7.773 24.012 9.258 24.012 11.082
 c 24.012 12.512 23.137 13.773 21.832 14.223 c h
21.125 14.469 m f
12.57 8.145 m 11.105 7.828 l 12.645 0.734 l 19.449 2.371 l 19.098 3.828
 l 13.785 2.551 l h
12.57 8.145 m f
11.895 18.609 m 10.18 18.609 8.66 18.082 7.715 17.152 c 7.234 16.68 l 8.184
 15.715 l 8.664 16.191 l 9.355 16.871 10.582 17.273 11.953 17.262 c 13.285
 17.25 14.52 16.84 15.176 16.191 c 15.656 15.715 l 16.605 16.676 l 16.125
 17.152 l 15.215 18.051 13.66 18.598 11.965 18.609 c 11.941 18.609 11.918
 18.609 11.895 18.609 c h
11.895 18.609 m f
9.789 12.766 m 9.789 13.648 9.109 14.367 8.27 14.367 c 7.426 14.367 6.746
 13.648 6.746 12.766 c 6.746 11.883 7.426 11.168 8.27 11.168 c 9.109 11.168
 9.789 11.883 9.789 12.766 c h
9.789 12.766 m f
17.215 12.766 m 17.215 13.648 16.535 14.367 15.691 14.367 c 14.852 14.367
 14.172 13.648 14.172 12.766 c 14.172 11.883 14.852 11.168 15.691 11.168
 c 16.535 11.168 17.215 11.883 17.215 12.766 c h
17.215 12.766 m f
20.066 2.922 m 20.066 3.809 19.383 4.523 18.543 4.523 c 17.703 4.523 17.02
 3.809 17.02 2.922 c 17.02 2.039 17.703 1.324 18.543 1.324 c 19.383 1.324
 20.066 2.039 20.066 2.922 c h
20.066 2.922 m f
Q Q
showpage
%%Trailer
%%EOF
