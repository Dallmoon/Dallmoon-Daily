%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:14 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 4 0 19 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 4 0 19 24
24 24 cairo_set_page_size
%%EndPageSetup
q 4 0 15 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
12.008 12.734 m 8.461 12.734 5.574 9.875 5.574 6.367 c 5.574 2.855 8.461
 0 12.008 0 c 15.555 0 18.441 2.855 18.441 6.367 c 18.441 9.875 15.555 12.734
 12.008 12.734 c h
12.008 1.5 m 9.289 1.5 7.074 3.684 7.074 6.367 c 7.074 9.047 9.289 11.23
 12.008 11.23 c 14.73 11.23 16.941 9.047 16.941 6.367 c 16.941 3.684 14.73
 1.5 12.008 1.5 c h
12.008 1.5 m f
17.828 24.156 m 11.984 16.902 l 5.945 23.957 l 4.809 22.98 l 11.109 15.617
 l 11.332 15.359 11.652 15.211 11.992 15.211 c 12 15.211 12.004 15.211 12.008
 15.211 c 12.355 15.219 12.68 15.375 12.898 15.645 c 18.996 23.211 l h
17.828 24.156 m f
12.094 16.441 m 9.27 16.441 6.738 15.371 5.469 13.633 c 5.027 13.027 l 
6.238 12.141 l 6.68 12.746 l 7.676 14.109 9.848 14.969 12.215 14.941 c 14.488
 14.914 16.398 14.098 17.324 12.762 c 17.754 12.145 l 18.984 13 l 18.559
 13.617 l 17.355 15.352 14.988 16.41 12.23 16.441 c 12.188 16.441 12.141
 16.441 12.094 16.441 c h
12.094 16.441 m f
Q Q
showpage
%%Trailer
%%EOF
