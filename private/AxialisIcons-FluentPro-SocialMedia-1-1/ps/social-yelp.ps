%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:37 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 23 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 23 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 22 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
11.238 23.996 m 9.012 23.996 7.297 23.168 6.133 21.535 c 5.824 21.105 5.855
 20.527 6.207 20.129 c 9.93 15.918 l 10.113 15.715 10.363 15.582 10.637 
15.547 c 10.758 15.531 10.926 15.512 11.102 15.512 c 11.938 15.512 12.566
 15.965 12.781 16.719 c 12.809 16.813 12.824 16.906 12.828 17 c 13.008 22.805
 l 13.027 23.414 12.566 23.926 11.957 23.969 c 11.715 23.988 11.469 23.996
 11.238 23.996 c h
7.531 20.898 m 8.398 21.973 9.613 22.496 11.238 22.496 c 11.324 22.496 
11.41 22.496 11.5 22.492 c 11.328 17.094 l 11.309 17.043 11.27 17.012 11.102
 17.012 c 11.059 17.012 11.008 17.016 10.961 17.02 c h
11.34 17.133 m h
11.34 17.133 m h
11.328 17.043 m 11.328 17.043 11.328 17.047 11.328 17.047 c h
17.75 22.906 m 17.352 22.906 16.98 22.695 16.777 22.352 c 13.684 17.148
 l 13.617 17.035 13.57 16.914 13.547 16.785 c 13.344 15.746 13.898 14.895
 14.922 14.664 c 15.113 14.625 15.309 14.633 15.488 14.684 c 21.441 16.426
 l 22.035 16.602 22.383 17.227 22.211 17.824 c 21.559 20.102 20.07 21.961
 18.223 22.805 c 18.074 22.871 17.914 22.906 17.75 22.906 c h
15.008 16.438 m 17.891 21.293 l 19.117 20.621 20.125 19.336 20.66 17.762
 c 15.164 16.152 l 15.031 16.195 14.984 16.262 15.008 16.438 c h
21.02 17.867 m h
3.563 17.203 m 3.086 17.203 2.656 16.902 2.496 16.457 c 1.773 14.473 1.773
 12.477 2.5 10.523 c 2.605 10.238 2.813 10.012 3.09 9.887 c 3.359 9.762 
3.676 9.75 3.953 9.852 c 9.5 11.883 l 9.688 11.953 9.852 12.066 9.98 12.219
 c 10.707 13.09 10.73 14.047 10.043 14.848 c 9.914 14.996 9.746 15.113 9.559
 15.18 c 3.938 17.137 l 3.816 17.18 3.688 17.203 3.563 17.203 c h
3.785 11.391 m 3.348 12.777 3.348 14.191 3.789 15.602 c 8.965 13.797 l 
9.055 13.676 9.098 13.535 8.887 13.258 c h
9.309 14.469 m h
3.438 11.262 m h
14.813 13.762 m 14.676 13.762 14.539 13.738 14.41 13.688 c 13.516 13.352
 13.039 12.621 13.098 11.684 c 13.113 11.465 13.191 11.258 13.32 11.082 
c 16.922 6.273 l 17.27 5.805 17.934 5.68 18.43 5.988 c 20.301 7.152 21.652
 9.195 22.043 11.453 c 22.098 11.75 22.023 12.059 21.848 12.305 c 21.676
 12.547 21.402 12.715 21.105 12.762 c 14.992 13.746 l 14.934 13.758 14.875
 13.762 14.813 13.762 c h
14.594 11.887 m 14.598 12.047 14.656 12.156 14.859 12.25 c 20.492 11.344
 l 20.125 9.762 19.188 8.344 17.914 7.449 c h
11.105 11.871 m 10.738 11.871 10.379 11.746 10.07 11.508 c 9.984 11.441
 9.91 11.363 9.844 11.277 c 4.371 3.797 l 4.027 3.328 4.098 2.676 4.539 
2.285 c 5.652 1.293 7.445 -0.027 10.117 -0.027 c 10.652 -0.027 11.234 0.027
 11.797 0.129 c 12.344 0.227 12.758 0.707 12.758 1.242 c 12.758 10.316 l
 12.758 10.492 12.703 10.625 12.66 10.707 c 12.43 11.406 11.816 11.871 11.105
 11.871 c h
11.02 10.34 m 11.051 10.359 11.082 10.371 11.105 10.371 c 11.176 10.371
 11.223 10.293 11.242 10.219 c 11.246 10.199 11.254 10.184 11.258 10.164
 c 11.258 1.563 l 10.871 1.504 10.48 1.473 10.117 1.473 c 8.152 1.473 6.781
 2.348 5.785 3.188 c h
10.98 10.316 m h
10.98 10.316 m f
Q Q
showpage
%%Trailer
%%EOF
