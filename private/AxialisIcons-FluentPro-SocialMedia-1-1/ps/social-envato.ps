%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:03 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 22 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 22 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 21 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
11.613 24.035 m 9.922 24.035 8.25 23.582 6.734 22.688 c 4.395 21.309 2.699
 19.051 1.961 16.328 c 1.223 13.602 1.543 10.754 2.867 8.316 c 3.121 7.855
 3.457 7.332 3.785 6.887 c 4.348 6.125 4.582 6.004 4.773 5.941 c 5.246 5.785
 5.734 6.047 5.988 6.359 c 6.25 6.68 6.313 7.082 6.168 7.434 c 5.797 8.848
 5.875 10.453 6.07 11.742 c 6.438 9.746 7.125 7.902 8.125 6.242 c 9.352 
4.195 11.023 2.422 13.23 0.824 c 13.711 0.461 15.031 0.23 15.789 0.121 c
 17.957 -0.18 18.461 0.113 18.625 0.211 c 18.996 0.43 l 18.996 0.516 l 20.113
 1.684 21.031 4.957 21.441 7.758 c 21.82 10.336 22.188 15.168 20.391 18.582
 c 19.063 21.109 16.879 22.914 14.234 23.668 c 13.367 23.914 12.488 24.035
 11.613 24.035 c h
4.457 8.57 m 4.363 8.719 4.273 8.879 4.188 9.035 c 1.824 13.383 3.309 18.926
 7.496 21.395 c 9.434 22.539 11.68 22.832 13.82 22.227 c 16.066 21.586 17.926
 20.047 19.063 17.887 c 20.227 15.672 20.555 12.066 19.961 8 c 19.719 6.367
 19.34 4.77 18.895 3.5 c 18.418 2.152 18.023 1.633 17.883 1.52 c 17.293 
1.363 14.633 1.762 14.125 2.027 c 14.117 2.031 l 9.688 5.242 7.445 9.371
 7.262 14.652 c 7.262 14.734 l 7.238 14.813 l 7.141 15.188 6.84 15.469 6.477
 15.531 c 6.281 15.563 5.793 15.57 5.398 14.969 c 5.078 14.477 4.191 11.469
 4.457 8.57 c h
14.113 2.035 m h
17.91 1.527 m h
17.91 1.527 m f
Q Q
showpage
%%Trailer
%%EOF
