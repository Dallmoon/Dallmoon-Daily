%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:39 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 1 0 24 24
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 1 0 24 24
24 24 cairo_set_page_size
%%EndPageSetup
q 1 0 23 24 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
5.277 10.477 m 4.863 10.477 4.527 10.141 4.527 9.727 c 4.527 5.738 l 2.805
 1.148 l 2.66 0.762 2.855 0.328 3.246 0.184 c 3.633 0.039 4.066 0.234 4.211
 0.621 c 6.027 5.465 l 6.027 9.727 l 6.027 10.141 5.691 10.477 5.277 10.477
 c h
5.277 10.477 m f
5.277 6.156 m 5.176 6.156 5.074 6.137 4.977 6.094 c 4.598 5.93 4.422 5.484
 4.59 5.105 c 6.555 0.586 l 6.719 0.207 7.16 0.035 7.543 0.199 c 7.922 0.363
 8.094 0.805 7.93 1.188 c 5.965 5.703 l 5.84 5.988 5.566 6.156 5.277 6.156
 c h
5.277 6.156 m f
11.066 10.477 m 9.992 10.477 l 9.063 10.477 8.305 9.723 8.305 8.789 c 8.305
 4.77 l 8.305 3.84 9.063 3.082 9.992 3.082 c 11.066 3.082 l 11.996 3.082
 12.754 3.84 12.754 4.77 c 12.754 8.789 l 12.754 9.719 11.996 10.477 11.066
 10.477 c h
9.992 4.582 m 9.891 4.582 9.805 4.668 9.805 4.77 c 9.805 8.789 l 9.805 
8.895 9.891 8.977 9.992 8.977 c 11.066 8.977 l 11.168 8.977 11.254 8.895
 11.254 8.789 c 11.254 4.77 l 11.254 4.668 11.168 4.582 11.066 4.582 c h
9.992 4.582 m f
21.027 23.855 m 19.801 23.855 18.805 22.902 18.805 21.73 c 18.805 18.586
 l 18.805 17.414 19.805 16.461 21.027 16.461 c 22.254 16.461 23.254 17.414
 23.254 18.586 c 23.254 20.32 l 20.305 20.32 l 20.305 21.73 l 20.305 22.074
 20.629 22.355 21.027 22.355 c 21.457 22.355 21.637 22.281 21.695 22.246
 c 21.734 22.227 21.746 22.219 21.746 22.125 c 21.746 21.711 22.082 21.375
 22.496 21.375 c 22.91 21.375 23.246 21.711 23.246 22.125 c 23.246 22.645
 23.027 23.855 21.027 23.855 c h
20.305 18.82 m 21.754 18.82 l 21.754 18.586 l 21.754 18.242 21.426 17.961
 21.027 17.961 c 20.629 17.961 20.305 18.242 20.305 18.586 c h
20.305 18.82 m f
15.875 10.426 m 15.594 10.426 15.336 10.367 15.102 10.246 c 14.578 9.977
 14.277 9.43 14.277 8.746 c 14.277 3.832 l 14.277 3.418 14.613 3.082 15.027
 3.082 c 15.441 3.082 15.777 3.418 15.777 3.832 c 15.777 8.746 l 15.777 
8.836 15.793 8.891 15.801 8.914 c 15.879 8.93 16.355 8.973 17.539 8.133 
c 17.879 7.895 18.344 7.973 18.586 8.313 c 18.824 8.648 18.742 9.117 18.406
 9.355 c 17.398 10.074 16.563 10.426 15.875 10.426 c h
15.809 8.926 m h
15.809 8.926 m f
15.609 23.805 m 14.93 23.805 14.102 23.473 13.098 22.809 c 12.75 22.578
 12.656 22.113 12.887 21.766 c 13.117 21.422 13.582 21.328 13.926 21.559
 c 15.117 22.348 15.605 22.313 15.695 22.293 c 15.699 22.273 15.707 22.238
 15.707 22.184 c 15.707 18.082 l 15.707 18.027 15.699 17.992 15.695 17.973
 c 15.605 17.953 15.117 17.914 13.926 18.707 c 13.582 18.938 13.117 18.844
 12.887 18.496 c 12.656 18.152 12.75 17.688 13.098 17.457 c 14.547 16.496
 15.633 16.23 16.418 16.652 c 16.922 16.922 17.207 17.441 17.207 18.082 
c 17.207 22.184 l 17.207 22.824 16.922 23.344 16.418 23.613 c 16.176 23.742
 15.906 23.805 15.609 23.805 c h
15.609 23.805 m f
17.973 10.477 m 17.559 10.477 17.223 10.141 17.223 9.727 c 17.223 3.832
 l 17.223 3.418 17.559 3.082 17.973 3.082 c 18.387 3.082 18.723 3.418 18.723
 3.832 c 18.723 9.727 l 18.723 10.141 18.387 10.477 17.973 10.477 c h
17.973 10.477 m f
8.25 23.805 m 7.973 23.805 7.73 23.742 7.516 23.621 c 7.035 23.355 6.789
 22.848 6.789 22.125 c 6.789 17.211 l 6.789 16.797 7.125 16.461 7.539 16.461
 c 7.953 16.461 8.289 16.797 8.289 17.211 c 8.289 22.125 l 8.289 22.203 
8.297 22.262 8.301 22.301 c 8.484 22.285 8.984 22.168 10.094 21.484 c 10.449
 21.27 10.91 21.379 11.129 21.73 c 11.344 22.082 11.234 22.547 10.883 22.762
 c 9.734 23.469 8.898 23.805 8.25 23.805 c h
8.32 22.383 m h
8.32 22.383 m f
10.488 23.855 m 10.074 23.855 9.738 23.52 9.738 23.105 c 9.738 17.211 l
 9.738 16.797 10.074 16.461 10.488 16.461 c 10.902 16.461 11.238 16.797 
11.238 17.211 c 11.238 23.105 l 11.238 23.52 10.902 23.855 10.488 23.855
 c h
10.488 23.855 m f
5.531 15.016 m 1.797 15.016 l 1.383 15.016 1.047 14.68 1.047 14.266 c 1.047
 13.852 1.383 13.516 1.797 13.516 c 5.531 13.516 l 5.945 13.516 6.281 13.852
 6.281 14.266 c 6.281 14.68 5.945 15.016 5.531 15.016 c h
5.531 15.016 m f
3.762 23.855 m 3.348 23.855 3.012 23.52 3.012 23.105 c 3.012 14.855 l 3.012
 14.441 3.348 14.105 3.762 14.105 c 4.176 14.105 4.512 14.441 4.512 14.855
 c 4.512 23.105 l 4.512 23.52 4.176 23.855 3.762 23.855 c h
3.762 23.855 m f
13.512 23.855 m 13.098 23.855 12.762 23.52 12.762 23.105 c 12.762 14.266
 l 12.762 13.852 13.098 13.516 13.512 13.516 c 13.926 13.516 14.262 13.852
 14.262 14.266 c 14.262 23.105 l 14.262 23.52 13.926 23.855 13.512 23.855
 c h
13.512 23.855 m f
Q Q
showpage
%%Trailer
%%EOF
