%!PS-Adobe-3.0
%%Creator: cairo 1.15.6 (http://cairographics.org)
%%CreationDate: Tue Jan 08 12:29:16 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 8x8mm 24 24 0 () ()
%%BoundingBox: 0 2 24 22
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 8x8mm
%%PageBoundingBox: 0 2 24 22
24 24 cairo_set_page_size
%%EndPageSetup
q 0 2 24 20 rectclip
1 0 0 -1 0 24 cm q
0.00392157 g
12 21.5 m 9.816 21.5 7.805 20.754 6.207 19.5 c 1.473 19.5 l 0.762 19.5 
0 18.93 0 18.082 c 0 5.918 l 0 5.445 0.227 4.988 0.59 4.719 c 0.875 4.512
 1.223 4.434 1.563 4.5 c 2.25 4.5 l 2.25 3 l 6 3 l 6 4.5 l 6.441 4.5 l 8
 3.355 9.922 2.68 12 2.68 c 14.078 2.68 16 3.355 17.559 4.5 c 22.582 4.5
 l 23.363 4.5 24 5.137 24 5.918 c 24 17.957 l 24 18.758 23.359 19.449 22.574
 19.5 c 17.793 19.5 l 16.195 20.754 14.184 21.5 12 21.5 c h
12 4.18 m 7.637 4.18 4.09 7.727 4.09 12.09 c 4.09 16.453 7.637 20 12 20
 c 16.363 20 19.91 16.453 19.91 12.09 c 19.91 7.727 16.363 4.18 12 4.18 
c h
19.316 18 m 22.473 18 l 22.484 17.988 22.5 17.969 22.5 17.957 c 22.5 6 
l 19.172 6 l 20.566 7.641 21.41 9.77 21.41 12.09 c 21.41 14.328 20.625 16.383
 19.316 18 c h
1.5 18 m 4.684 18 l 3.375 16.383 2.59 14.328 2.59 12.09 c 2.59 9.77 3.434
 7.641 4.832 6 c 1.5 6 l h
3.75 4.5 m 4.5 4.5 l h
3.75 4.5 m f
18.063 12.766 m 16.715 12.766 l 16.715 12.09 l 16.715 9.488 14.598 7.375
 12 7.375 c 11.324 7.375 l 11.324 6.027 l 12 6.027 l 15.344 6.027 18.063
 8.746 18.063 12.09 c h
18.063 12.766 m f
Q Q
showpage
%%Trailer
%%EOF
